{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\JSU Documents\\\\Side Projects\\\\bank-app\\\\react-bank-app\\\\src\\\\Components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { Grid, Box } from \"@mui/material/\";\nimport { Typography } from \"@mui/material\";\nimport BankLogo from \"../../Assets/Bank_logo.png\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [userName, setUserName] = useState(\"test user\");\n  const [password, setPassword] = useState(\"test password\");\n  const testUser = {\n    user: \"test\",\n    pword: \"test\"\n  };\n  const [check, setCheck] = useState(false); //Submit\n\n  const handleSubmit = e => {\n    //avoid page from reloading\n    e.preventDefault();\n    console.log(\"For Submitted\");\n  }; // Authentication\n\n\n  const checkUser = (uname, pword) => {\n    //check if the user is in the database\n    if (testUser.user === uname && testUser.pword === pword) {\n      alert(\"Correct password or email\");\n      return /*#__PURE__*/_jsxDEV(Dashboard, {\n        uname: uname,\n        pword: pword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    } else {\n      alert(\"Incorrect password or email\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: BankLogo,\n      alt: \"bank-logo\",\n      style: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: \"25%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      style: {\n        margin: \"10px auto\",\n        width: \"40%\",\n        border: \"3px solid blue\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Username\",\n              type: \"email\",\n              variant: \"outlined\",\n              helperText: \"Please enter your username\",\n              onChange: event => {\n                setUserName(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-password-input\",\n              label: \"Password\",\n              type: \"password\",\n              helperText: \"Please enter your password\",\n              onChange: event => {\n                setPassword(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Remember Me \", /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => checkUser(userName, password),\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"9Zybe4mKpQH3A6AwQTCckEgDnT8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/JSU Documents/Side Projects/bank-app/react-bank-app/src/Components/Login/Login.jsx"],"names":["React","useState","Checkbox","Button","TextField","Grid","Box","Typography","BankLogo","Dashboard","Login","userName","setUserName","password","setPassword","testUser","user","pword","check","setCheck","handleSubmit","e","preventDefault","console","log","checkUser","uname","alert","display","marginLeft","marginRight","maxWidth","margin","width","border","padding","flexGrow","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Grid, Box } from \"@mui/material/\";\r\nimport { Typography } from \"@mui/material\";\r\nimport BankLogo from \"../../Assets/Bank_logo.png\";\r\n\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState(\"test user\");\r\n  const [password, setPassword] = useState(\"test password\");\r\n\r\n  const testUser = {\r\n    user: \"test\",\r\n    pword: \"test\",\r\n  };\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    //avoid page from reloading\r\n    e.preventDefault();\r\n    console.log(\"For Submitted\");\r\n  };\r\n\r\n  // Authentication\r\n  const checkUser = (uname, pword) => {\r\n    //check if the user is in the database\r\n    if (testUser.user === uname && testUser.pword === pword) {\r\n      alert(\"Correct password or email\");\r\n      return(<Dashboard uname={uname} pword={pword}/>);\r\n    } else {\r\n      alert(\"Incorrect password or email\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        src={BankLogo}\r\n        alt=\"bank-logo\"\r\n        style={{\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          maxWidth: \"25%\",\r\n        }}\r\n      />\r\n      <div\r\n        className=\"login\"\r\n        style={{\r\n          margin: \"10px auto\",\r\n          width: \"40%\",\r\n          border: \"3px solid blue\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"h2\">Sign In</Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                type=\"email\"\r\n                variant=\"outlined\"\r\n                helperText=\"Please enter your username\"\r\n                onChange={(event) => {\r\n                  setUserName(event.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                helperText=\"Please enter your password\"\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Typography variant=\"h6\">\r\n                Remember Me <Checkbox />\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => checkUser(userName, password)}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}